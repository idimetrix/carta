@mixin button-variant(
	$background,
	$border,
	$hover-background: darken($background, 0%),
	$hover-border: darken($border, 0%),
	$active-background: darken($background, 10%),
	$active-border: darken($border, 0%)
) {
	@include gradient-bg($background);
	@include box-shadow($btn-box-shadow);
	border-color: $border;
	color: color-yiq($background);

	@include hover {
		@include gradient-bg($hover-background);
		border-color: $hover-border;
		color: color-yiq($hover-background);
	}

	&:focus,
	&.focus {
		// Avoid using mixin so we can pass custom focus shadow properly
		@if $enable-shadows {
			box-shadow: $btn-box-shadow, 0 0 0 $btn-focus-width rgba($border, 0.5);
		} @else {
			box-shadow: 0 0 0 $btn-focus-width rgba($border, 0.5);
		}
	} // Disabled comes first so active can properly restyle
	&.disabled,
	&:disabled {
		background-color: $background;
		border-color: $border;
		color: color-yiq($background);
	}

	&:not(:disabled):not(.disabled):active,
	&:not(:disabled):not(.disabled).active,
	.show > &.dropdown-toggle {
		background-color: $active-background;
		border-color: $active-border;
		color: color-yiq($active-background);

		&:focus {
			// Avoid using mixin so we can pass custom focus shadow properly
			@if $enable-shadows {
				box-shadow: $btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($border, 0.5);
			} @else {
				box-shadow: 0 0 0 $btn-focus-width rgba($border, 0.5);
			}
		}
		@if $enable-gradients {
			background-image: none; // Remove the gradient for the pressed/active state
		}
	}
}

@mixin button-outline-variant($color, $color-hover: color-yiq($color), $active-background: $color, $active-border: $color) {
	background-color: transparent;
	background-image: none;
	border-color: $color;
	color: $color;

	&:hover {
		background-color: $active-background;
		border-color: $active-border;
		color: $color-hover;
	}

	&:focus,
	&.focus {
		box-shadow: 0 0 0 $btn-focus-width rgba($color, 0.5);
	}

	&.disabled,
	&:disabled {
		background-color: transparent;
		color: $color;
	}

	&:not(:disabled):not(.disabled):active,
	&:not(:disabled):not(.disabled).active,
	.show > &.dropdown-toggle {
		background-color: $active-background;
		border-color: $active-border;
		color: color-yiq($active-background);

		&:focus {
			// Avoid using mixin so we can pass custom focus shadow properly
			@if $enable-shadows and $btn-active-box-shadow !=none {
				box-shadow: $btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($color, 0.5);
			} @else {
				box-shadow: 0 0 0 $btn-focus-width rgba($color, 0.5);
			}
		}
	}
}

// Button sizes
@mixin button-size($padding-y, $padding-x, $font-size, $line-height, $border-radius) {
	font-size: $font-size;
	line-height: $line-height; // Manually declare to provide an override to the browser default
	padding: $padding-y $padding-x;
	@if $enable-rounded {
		border-radius: $border-radius;
	} @else {
		border-radius: 0;
	}
}
