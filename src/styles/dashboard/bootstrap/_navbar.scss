// Contents
//
// Navbar
// Navbar brand
// Navbar nav
// Navbar text
// Navbar divider
// Responsive navbar
// Navbar position
// Navbar themes

// Navbar
//
// Provide a static navbar from which we expand to create full-width, fixed, and
// other navbar variations.

.navbar {
	align-items: center;
	display: flex;
	flex-wrap: wrap; // allow us to do the line break for collapsing content
	justify-content: space-between; // space out brand from logo
	padding: $navbar-padding-y $navbar-padding-x;
	position: relative;

	// Because flex properties aren't inherited, we need to redeclare these first
	// few properties so that content nested within behave properly.
	> .container,
	> .container-fluid {
		align-items: center;
		display: flex;
		flex-wrap: wrap;
		justify-content: space-between;
	}
}

// Navbar brand
//
// Used for brand, project, or site names.

.navbar-brand {
	display: inline-block;
	font-size: $navbar-brand-font-size;
	line-height: inherit;
	margin-right: $navbar-padding-x;
	padding-bottom: $navbar-brand-padding-y;
	padding-top: $navbar-brand-padding-y;
	white-space: nowrap;

	@include hover-focus {
		text-decoration: none;
	}
}

// Navbar nav
//
// Custom navbar navigation (doesn't require `.nav`, but does make use of `.nav-link`).

.navbar-nav {
	display: flex;
	flex-direction: column; // cannot use `inherit` to get the `.navbar`s value
	list-style: none;
	margin-bottom: 0;
	padding-left: 0;

	.nav-link {
		padding-left: 0;
		padding-right: 0;
	}

	.dropdown-menu {
		float: none;
		position: static;
	}
}

// Navbar text
//
//

.navbar-text {
	display: inline-block;
	padding-bottom: $nav-link-padding-y;
	padding-top: $nav-link-padding-y;
}

// Responsive navbar
//
// Custom styles for responsive collapsing and toggling of navbar contents.
// Powered by the collapse Bootstrap JavaScript plugin.

// When collapsed, prevent the toggleable navbar contents from appearing in
// the default flexbox row orientation. Requires the use of `flex-wrap: wrap`
// on the `.navbar` parent.
.navbar-collapse {
	// For always expanded or extra full navbars, ensure content aligns itself
	// properly vertically. Can be easily overridden with flex utilities.
	align-items: center;
	flex-basis: 100%;
	flex-grow: 1;
}

// Button for toggling the navbar when in its collapsed state
.navbar-toggler {
	@include border-radius($navbar-toggler-border-radius);
	background-color: transparent; // remove default button style
	border: $border-width solid transparent; // remove default button style
	font-size: $navbar-toggler-font-size;
	line-height: 1;
	padding: $navbar-toggler-padding-y $navbar-toggler-padding-x;

	@include hover-focus {
		text-decoration: none;
	}

	// Opinionated: add "hand" cursor to non-disabled .navbar-toggler elements
	&:not(:disabled):not(.disabled) {
		cursor: pointer;
	}
}

// Keep as a separate element so folks can easily override it with another icon
// or image file as needed.
.navbar-toggler-icon {
	background: no-repeat center center;
	background-size: 100% 100%;
	content: '';
	display: inline-block;
	height: 1.5em;
	vertical-align: middle;
	width: 1.5em;
}

// Generate series of `.navbar-expand-*` responsive classes for configuring
// where your navbar collapses.
.navbar-expand {
	@each $breakpoint in map-keys($grid-breakpoints) {
		$next: breakpoint-next($breakpoint, $grid-breakpoints);
		$infix: breakpoint-infix($next, $grid-breakpoints);

		&#{$infix} {
			@include media-breakpoint-down($breakpoint) {
				> .container,
				> .container-fluid {
					padding-left: 0;
					padding-right: 0;
				}
			}

			@include media-breakpoint-up($next) {
				flex-flow: row nowrap;
				justify-content: flex-start;

				.navbar-nav {
					flex-direction: row;

					.dropdown-menu {
						position: absolute;
					}

					.nav-link {
						padding-left: $navbar-nav-link-padding-x;
						padding-right: $navbar-nav-link-padding-x;
					}
				}

				// For nesting containers, have to redeclare for alignment purposes
				> .container,
				> .container-fluid {
					flex-wrap: nowrap;
				}

				.navbar-collapse {
					display: flex !important; // stylelint-disable-line declaration-no-important

					// Changes flex-bases to auto because of an IE10 bug
					flex-basis: auto;
				}

				.navbar-toggler {
					display: none;
				}
			}
		}
	}
}

// Navbar themes
//
// Styles for switching between navbars with light or dark background.

// Dark links against a light background
.navbar-light {
	.navbar-brand {
		color: $navbar-light-active-color;

		@include hover-focus {
			color: $navbar-light-active-color;
		}
	}

	.navbar-nav {
		.nav-link {
			color: $navbar-light-color;

			@include hover-focus {
				color: $navbar-light-hover-color;
			}

			&.disabled {
				color: $navbar-light-disabled-color;
			}
		}

		.show > .nav-link,
		.active > .nav-link,
		.nav-link.show,
		.nav-link.active {
			color: $navbar-light-active-color;
		}
	}

	.navbar-toggler {
		border-color: $navbar-light-toggler-border-color;
		color: $navbar-light-color;
	}

	.navbar-toggler-icon {
		background-image: $navbar-light-toggler-icon-bg;
	}

	.navbar-text {
		color: $navbar-light-color;

		a {
			color: $navbar-light-active-color;

			@include hover-focus {
				color: $navbar-light-active-color;
			}
		}
	}
}

// White links against a dark background
.navbar-dark {
	.navbar-brand {
		color: $navbar-dark-active-color;

		@include hover-focus {
			color: $navbar-dark-active-color;
		}
	}

	.navbar-nav {
		.nav-link {
			color: $navbar-dark-color;

			@include hover-focus {
				color: $navbar-dark-hover-color;
			}

			&.disabled {
				color: $navbar-dark-disabled-color;
			}
		}

		.show > .nav-link,
		.active > .nav-link,
		.nav-link.show,
		.nav-link.active {
			color: $navbar-dark-active-color;
		}
	}

	.navbar-toggler {
		border-color: $navbar-dark-toggler-border-color;
		color: $navbar-dark-color;
	}

	.navbar-toggler-icon {
		background-image: $navbar-dark-toggler-icon-bg;
	}

	.navbar-text {
		color: $navbar-dark-color;

		a {
			color: $navbar-dark-active-color;

			@include hover-focus {
				color: $navbar-dark-active-color;
			}
		}
	}
}
